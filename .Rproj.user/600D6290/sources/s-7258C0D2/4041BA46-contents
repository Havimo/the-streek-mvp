#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(bslib)
library(httr)
source('param.R')
source('lib.R')

thematic::thematic_shiny(font = 'auto')

# if (interactive()) {
#   # testing url
#   options(shiny.port = 8100)
#   APP_URL <- "http://localhost:8100/"
# } else {
#   # deployed URL
#   APP_URL <- "https://havimo.shinyapps.io/the-streek/"
# }

# Define UI for application that draws a histogram
ui <- fluidPage(
    theme = bs_theme(version = 4, bootswatch = "minty",
                   base_font = font_google("DM Sans"),
                  code_font = font_google("Space Mono")),

    # Application title
    titlePanel("The Streek"),
    shinybusy::add_busy_spinner(spin = "cube-grid"),
    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
          actionButton("connectStrava","Connect to Strava")
        ),
        # Show a plot of the generated distribution
        mainPanel(
            uiOutput("userImg", click = "MyImage"),
            textOutput("currentStreak"),
            plotOutput("last_16_weeks")
        )
    )
)
server <- function(input, output) {
  observeEvent(input$connectStrava,{
      # strava_app <- oauth_app(appname = app_name,
      #   key = app_client_id,
      #   secret = app_secret,
      #   redirect_uri = APP_URL
      # )
      # strava_endpoint <- oauth_endpoint(request = "https://www.strava.com/oauth/authorize?", 
      #                       authorize = "https://www.strava.com/oauth/authorize", 
      #                       access = "https://www.strava.com/oauth/token")
      # stoken <- oauth2.0_token(endpoint = strava_endpoint, app = strava_app, scope =  "activity:read_all", cache = F)
      stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope = "activity:read_all", cache = F))
      #stoken <- httr::config(token = readRDS('.httr-oauth')[[1]])
      values <- reactiveValues(myinfo = get_athlete(stoken),
                               activity_list = GetAndFormatActivityList(stoken))
  
      output$userImg <- renderUI({
          image <- values$myinfo$profile
          print(image)
          tags$img(src=image, width = 136, height = 136)
      })
      
      output$currentStreak <- renderText(GetCurrentRunningStreak(values$activity_list, values$myinfo))
      
      output$last_16_weeks <- renderPlot(PlotLast16Weeks(values$activity_list))
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
